<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Craig Marvelley]]></title>
  <link href="http://marvelley.com/atom.xml" rel="self"/>
  <link href="http://marvelley.com/"/>
  <updated>2014-06-09T22:27:01+00:00</updated>
  <id>http://marvelley.com/</id>
  <author>
    <name><![CDATA[Craig Marvelley]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Never Out of Beta Returns!]]></title>
    <link href="http://marvelley.com/blog/2014/06/09/never-out-of-beta-returns/"/>
    <updated>2014-06-09T14:26:18+00:00</updated>
    <id>http://marvelley.com/blog/2014/06/09/never-out-of-beta-returns</id>
    <content type="html"><![CDATA[<p>I love podcasts. Since I moved house and gained a commute I&rsquo;ve whiled away the time to and from work listening to <a href="http://daringfireball.net/thetalkshow/">The Talk Show</a>, <a href="http://therecord.co">The Record</a>, <a href="http://www.theguardian.com/football/series/footballweekly">The Guardian&rsquo;s Football Weekly</a>, and a couple of other great shows. Enough that I&rsquo;m barely able to listen to them all. They made me pine for <a href="http://www.neveroutofbeta.com">Never Out Of Beta</a> though, a podcast <a href="https://twitter.com/gavD_UK">Gav</a> and <a href="https://twitter.com/handybitesize">Carey</a> started a couple of years ago that I and a few friends would guest on, which was great fun.</p>

<p>But my longing is over &ndash; Gav and I have rebooted the show, and the <a href="https://soundcloud.com/never-out-of-beta/episode-0-2-1-its-not-in-my">first episode is available now</a> via Soundcloud!</p>

<p>A couple of notes:</p>

<ul>
<li>Production &ldquo;issues&rdquo; (well, I forgot a bunch of audio equipment) meant that we had to record this one via my Macbook&rsquo;s built in microphone. It turned out ok, but we&rsquo;ve got higher standards which hopefully we&rsquo;ll get closer to next time</li>
<li>It took longer than I&rsquo;d have liked to get the episode out because I&rsquo;m learning the ropes when it comes to editing. The WWDC stuff is a bit old hat now, but get past that and I think there&rsquo;s some interesting discussion around the DevOps mindset and provisioning with Ansible</li>
<li>An iTunes feed is coming as soon as I can sort one out &ndash; I listen to podcasts through the Apple Podcast app so I&rsquo;m eager to make it available there</li>
<li>Inspired by The Talk Show&rsquo;s recent switch we&rsquo;re hosting the show on SoundCloud, which has been perfect so far</li>
</ul>


<p>As with pretty much everything else Gav and I do, it might take a few iterations before this is something we&rsquo;re really happy with, and feedback to aid us in getting there will be very much appreciated.</p>

<p>If you like tech, you might like this. Check it out!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Handling Interactive Ansible Tasks]]></title>
    <link href="http://marvelley.com/blog/2014/04/23/handling-interactive-ansible-tasks/"/>
    <updated>2014-04-23T09:40:10+00:00</updated>
    <id>http://marvelley.com/blog/2014/04/23/handling-interactive-ansible-tasks</id>
    <content type="html"><![CDATA[<p>I recently re-ran some Ansible provisioning scripts after upgrading the
base box to an Ubuntu 14.04 image and found they stalled midway through. The cause? One
task involved installing the PECL mongo module, and the installation process now prompts
the user to decide whether or not to build with Cyrus SASL support. I couldn&rsquo;t see a way to force
a decision via the PECL installer, and Ansible can&rsquo;t
respond to the prompt, so the provisioning process hung while awaiting an answer.</p>

<p>I found two ways to solve this.</p>

<h2>I&rsquo;ve been expecting you</h2>

<p>I did a bit of Googling and after coming across <a href="https://groups.google.com/forum/#!topic/ansible-project/pMy2VWgkQ1s">this post</a>
on the Ansible forum, I took a look at <a href="http://linux.die.net/man/1/expect">expect</a>. Expect lets you
script interactions with a spawned command, using regex to match against prompt text, and send
appropriate responses. It&rsquo;s a sound approach; I wrote a script that looked like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/expect
</span><span class='line'>
</span><span class='line'>spawn pecl install mongo
</span><span class='line'>
</span><span class='line'>expect "Build with Cyrus SASL"
</span><span class='line'>send "\r"
</span><span class='line'>
</span><span class='line'>expect eof</span></code></pre></td></tr></table></div></figure>


<p>And executed it on the box using Ansible&rsquo;s <code>script</code> module:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- name: Install PECL mongo extension
</span><span class='line'>  script: install_pecl_mongo.expect</span></code></pre></td></tr></table></div></figure>


<p>Mission achieved. I felt very pleased with myself for about 30 seconds, which is
how long it took for Paul to wander over and tell me there was a simpler way to do it.
Expect is a really good solution for scripting varied or complex responses, but I wasn&rsquo;t
faced with that problem here&hellip;</p>

<h2>Yes man</h2>

<p>In this specific case, all I wanted to do was answer a prompt which needed a yes or no
answer, and I wasn&rsquo;t concerned which I went with. There&rsquo;s a linux command
called <a href="http://en.wikipedia.org/wiki/Yes_(Unix">yes</a> which &ldquo;outputs an affirmative response,
or a user-defined string of text continuously until killed&rdquo;, which is just what I needed.</p>

<p>So now my task looks like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- name: Install PECL mongo extension
</span><span class='line'>  shell: yes '' | pecl install mongo</span></code></pre></td></tr></table></div></figure>


<p>Which continuously pipes the &lsquo;y&rsquo; character (by default) and a newline character into
the install command, automatically causing any prompts to be responded to in the
affirmative. For my simple use case it works perfectly, and is more straightforward than
writing expect scripts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Local Provisioning With Ansible]]></title>
    <link href="http://marvelley.com/blog/2014/04/11/local-provisioning-with-ansible/"/>
    <updated>2014-04-11T21:24:00+00:00</updated>
    <id>http://marvelley.com/blog/2014/04/11/local-provisioning-with-ansible</id>
    <content type="html"><![CDATA[<p>I recently <a href="http://marvelley.com/blog/2014/03/18/vagrant-1-dot-5-syncing-situation/">mentioned</a>
I&rsquo;m going all-in on provisioning and running all my development
environments in VMs provisioned with Ansible. My Ansible use doesn&rsquo;t end there though &ndash;
I&rsquo;m also using it to provision my MacBook.</p>

<p>I&rsquo;d read of a few other people doing this &ndash; Benjamin Eberlei has a particularly
<a href="http://whitewashing.de/2013/11/19/setting_up_development_machines_ansible_edition.html">good post</a>
on the topic, and was pretty much the inspiration for me doing the
same. Setting up a new machine can be a bit of a bore, and while in theory it
only happens whenever I upgrade hardware I have been caught out in the past with kernel
corruption forcing a reinstall, and I&rsquo;d like
to minimise the hassle should it ever happen again. I have <a href="http://backblaze.com">backups</a>
, but one of the few upsides of going back to scratch with a machine is that it&rsquo;s an
opportunity for spring clean; a script that effectively lists all the essential
components of my computer, and configures them to my taste, makes that so much easier.</p>

<p>Anyway. A couple of people mentioned they&rsquo;d be interested in the playbooks I wrote
to provision my laptop, so I&rsquo;ve taken out anything personal to me and <a href="https://github.com/craigmarvelley/macbook-provisioning">mirrored them
on Github</a>.</p>

<p>Currently the provisioning involves four things:</p>

<ul>
<li>Install Homebrew and various brews</li>
<li>Install Homebrew Casks and various casks</li>
<li>Enable zsh as default shell and install oh-my-zsh</li>
<li>Install dotfiles to configure git, vim, etc. (my dotfiles repo is <a href="https://github.com/craigmarvelley/dotfiles">here</a>)</li>
</ul>


<p>It&rsquo;s all straightforward, but a couple of implementation details:</p>

<ul>
<li>I&rsquo;ve ended up using Alfred as my OS X search tool because I store my casks under <code>/usr/local</code>
with the other brew stuff and symlink to /Applications, and Spotlight doesn&rsquo;t
grok symlinks. Instead I configure Alfred to link in the cask files</li>
<li>I read on a few places on the web that the method I use to determine my current shell
process &ndash; <code>echo $SHELL</code> &ndash; isn&rsquo;t foolproof. Works for me, but YMMV</li>
</ul>


<p>There&rsquo;s more I could do in terms of what I manage, especially when it comes to
dotfile configuration (incidentally one of the best things about automating
provisioning in this way is you end up looking at other people&rsquo;s approaches,
and finding out about libraries and tools that you never even knew existed &ndash; <a href="http://robots.thoughtbot.com/rcm-for-rc-files-in-dotfiles-repos">Thoughtbot&rsquo;s rcm</a>
is one such example here).
Also I&rsquo;m still finding my way with Ansible, so my playbooks can undoubtedly be improved, especially
when it comes to idempotency.
Nevertheless I&rsquo;m really happy to have a record of my machine&rsquo;s starting state, and will enjoy adding to it as time
passes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant 1.5 Syncing Situation]]></title>
    <link href="http://marvelley.com/blog/2014/03/18/vagrant-1-dot-5-syncing-situation/"/>
    <updated>2014-03-18T09:39:02+00:00</updated>
    <id>http://marvelley.com/blog/2014/03/18/vagrant-1-dot-5-syncing-situation</id>
    <content type="html"><![CDATA[<p><img src="http://marvelley.com/images/posts/2014/03/synchronised.jpg" alt="image" /></p>

<p>When starting work at <a href="http://www.bipsync.com">BipSync</a> I resolved to put the bits
and bobs I&rsquo;d learned about provisioning with Vagrant and Ansible into practice, and
no longer host development environments locally on my MacBook. The reasons were
twofold &ndash; firstly I wanted my development environment to mirror that
of live as closely as possible, and secondly when previously hosting multiple,
complex projects on one machine I experienced increased battery drain and frequent
slowdowns caused by active background services that I often didn&rsquo;t even need for my current
task. It was a pain to keep track of everything, especially when multiple versions
were required. So the attraction of having dev environments I could bring up and down, and if
necessary occasionally trash, was a strong one.</p>

<p>I&rsquo;d played with Vagrant / VirtualBox hosted projects on smallish codebases before,
where the default VirtualBox synced folder support was sufficient; however when
attempting to host and develop BipSync&rsquo;s sizeable applications it was quickly clear
that this combination wouldn&rsquo;t be fast enough to be fit for purpose.</p>

<p>Since VirtualBox has been <a href="http://puppetlabs.com/blog/new-vmware-provider-gives-vagrant-a-boost">acknowledged</a>
as the slowest of Vagrant&rsquo;s provider options, and we already had Parallels
licences for the development of our Windows applications, next I tried out the
third party <a href="https://github.com/Parallels/vagrant-parallels">Parallels plugin for Vagrant</a>.
Basically this was a non-starter &ndash; I immediately ran into bugs that were present in the project&rsquo;s
issue tracker, and the impression I got was that the plugin is still a work-in-progress.
The plugin is overseen by Parallels so I&rsquo;m optimistic that it&rsquo;ll one day be a
first-class provider, but as it was it was unusable.</p>

<p>So I went back to VirtualBox (VMWare was another option but before forking out money on the
software and accompanying plugin I wanted to exhaust all other options) and tried the other
synced folder types. First I tried the new rsync support, which I&rsquo;d <a href="https://www.vagrantup.com/blog/feature-preview-vagrant-1-5-rsync.html">read good things
about</a>. In terms of speed this was very quick because there isn&rsquo;t really a share to speak
of; shared items are copied to the guest rather than mounted. It requires a command
to be run constantly, to watch synced files for changes and copy them to the guest, and
this proved to be a problem; as <a href="https://github.com/mitchellh/vagrant/issues/3249">issues raised</a>
by others attest, the approach wasn&rsquo;t scaling to large (20k+ files) codebases, which
is common in my experience. I tried excluding some folders to see if that would help,
but it didn&rsquo;t.</p>

<p>So after all that I ended up using the NFS sync option, which aside from requiring
a password for sudo when booting the VM has proved trouble free, so far. Performance
is good, both in terms of the applications themselves, and when browsing and modifying files
in the share; I&rsquo;ve seen PHPStorm occasionally lock up but then it always has ;) It&rsquo;s
certainly good enough to work with now, and I&rsquo;ll be keeping an eye on the rsync and Parallels
options as they should improve in time.</p>

<p>(&ldquo;Moonlight Synchro&rdquo; image courtesy of <a href="http://www.flickr.com/photos/72562013@N06/12765457844/">Chris Phutully</a>. <a href="https://creativecommons.org/licenses/by/2.0/">See license</a>.)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goodbye Box UK, Hello BipSync]]></title>
    <link href="http://marvelley.com/blog/2014/03/06/goodbye-box-uk-hello-bipsync/"/>
    <updated>2014-03-06T23:08:01+00:00</updated>
    <id>http://marvelley.com/blog/2014/03/06/goodbye-box-uk-hello-bipsync</id>
    <content type="html"><![CDATA[<p>For the last 7 years I consider myself lucky to have been employed by Box UK. When I joined in 2007 I&rsquo;d spent the previous 3 years writing what I consider &lsquo;despite software&rsquo;. Software that did its job despite the efforts of the developer behind it. I was guilty of pretty much every bad practice at some stage; a direct result of me being the sole developer within both my company and my social circles. I didn&rsquo;t know better and had no-one to tell me otherwise, but by 2007 I knew I needed to address that by working for a company in which there were lots of people smarter and more experienced than me. To &ldquo;aim to be the dumbest person in the room&rdquo;, as it&rsquo;s often put &ndash; and never better than by my colleague and mentor at Box UK, <a href="http://twitter.com/handybitesize">Carey Hiles</a>, <a href="http://vimeo.com/37279704">speaking about being a lone coder</a> in the first <a href="http://unifieddiff.co.uk">Unified Diff</a> meetup put on several years later.</p>

<p>My first assignment at Box UK was making some tweaks to a web form on <a href="http://www.prometheanworld.com/gb/english/education/home/">Promethean&rsquo;s</a> e-commerce site. My last assignment was rearchitecting the technology behind <a href="http://www.careerswales.com">careerswales.com</a>, a multi-application portal serving millions of users, which is destined to help shape lives of the people of Wales for years to come. In between I&rsquo;ve created mobile applications, written web services, ported databases, implemented designs, discovered search platforms, pushed to queues, knocked out specifications, made many a calculation and finally &ndash; finally &ndash; got to grips with git. I&rsquo;ve taught schoolchildren how to code. I&rsquo;ve also shared more in-jokes than you could shake a stick at. Seriously.</p>

<p>As a software developer, I can&rsquo;t think of a better place to learn one&rsquo;s trade; every couple of months a new project comes along which will either improve existing skills, or demand new ones. Through the work that I&rsquo;ve done there I&rsquo;ve had the opportunity to travel the world, meet heroes, and <a href="http://www.youtube.com/watch?v=g2f_BzKrpaU&amp;list=PLo7mBDsRHu11HSkEucxDIAxeBZUJp10Jn&amp;index=5">speak at conferences</a>. My colleagues have been everything I&rsquo;d hoped they&rsquo;d be &ndash; smart, friendly, and more than happy to help. Most importantly, they&rsquo;re passionate. Box UK have aimed to only hire those who care about the work they do, and that&rsquo;s clearly reflected in what we&rsquo;ve achieved.</p>

<p>TL/DR: I&rsquo;ve had an amazing job these last 7 years, and have loved every single minute of it.</p>

<p>After seven years I&rsquo;m ready for a new challenge, and a wonderful opportunity at a startup called <a href="http://bipsync.com">BipSync</a> means it&rsquo;s time to move on. I&rsquo;ll be working with some former colleagues on some exciting software in a domain that&rsquo;s fresh and interesting. I can&rsquo;t wait to get stuck in, and hopefully share my experiences. I&rsquo;d like to thank all at Box UK, especially Benno and those with whom I worked closely with over the years, for all the opportunities I was given and the experiences I&rsquo;ve had. You&rsquo;ve undoubtedly made me a better person, and I wish you all the best for the future.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Restore Missing Audio in iMovie for Mac]]></title>
    <link href="http://marvelley.com/blog/2014/02/17/restore-missing-audio-in-imovie-for-mac/"/>
    <updated>2014-02-17T08:45:26+00:00</updated>
    <id>http://marvelley.com/blog/2014/02/17/restore-missing-audio-in-imovie-for-mac</id>
    <content type="html"><![CDATA[<p><img src="http://farm1.staticflickr.com/169/414411019_e702aa6d54_o.jpg" alt="image" /></p>

<p>I recently got a new Macbook (running Mavericks) and wanted to transfer the iMovie projects from my older machine (running Mountain Lion). The new machine featured the most recent version of iMovie (iMovie for Mac, version 10.0.2) while my old one was on 9.0.9.</p>

<p>I loaded the projects into iMovie for Mac by copying over the <code>iMovie Events</code>, <code>iMovie Original Movies</code> and <code>iMovie Projects</code> folders via AirDrop. Upon starting iMovie for Mac it prompted me to upgrade my projects to the new format. After some time a dialog appeared notifying me that some events had not been found, and that the upgrade had not been successful.</p>

<p>It turned out that the movie events were fine, but the background audio I&rsquo;d added (via iTunes) was missing because I&rsquo;d not copied over my iTunes folder (and hadn&rsquo;t planned to, since I now use iTunes in the Cloud). Attempting to open a ported project gave me a dialog along the lines of &lsquo;Upgrade now, with missing events, or upgrade later&rsquo; &ndash; the choice was inconsequential since even by choosing &lsquo;Upgrade later&rsquo; before putting the tracks in the places they were expected before opening the movie, the movie didn&rsquo;t seem to pick up on the fact that they were now there. The waveforms remained blank, and the audio didn&rsquo;t play. Of course, in most cases I didn&rsquo;t even know which files were missing because most of these movies were put together months ago.</p>

<p>I eventually fixed it by painstakingly downloading and importing each audio track into the movie alongside the original clip, which triggered a reload of the original. Then the second clip could be removed, leaving the original which now played. It would be nice if iMovie for Mac had a &lsquo;reload all events in this movie&rsquo; feature (perhaps it does, and I couldn&rsquo;t find it &ndash; I&rsquo;ve never found iMovie to have the most intuitive of interfaces)&ndash; thankfully I only had 20 or so tracks to fix, but for some more hardcore users it could be a lot worse.</p>

<p>(Waveform image copyright <a href="http://www.flickr.com/photos/topgold/414411019/">Bernard Goldbach</a>)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Understanding DNS]]></title>
    <link href="http://marvelley.com/blog/2014/02/14/understanding-dns/"/>
    <updated>2014-02-14T09:53:02+00:00</updated>
    <id>http://marvelley.com/blog/2014/02/14/understanding-dns</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve never really taken the time to read up on how DNS works. Ten years of web development mean I&rsquo;ve gradually assumed a pretty good idea through trial and error, but I&rsquo;ve never really felt 100% confident that I know what I&rsquo;m doing when registering and administering domain names, particularly when it comes to more obscure record types like <a href="http://www.zytrax.com/books/dns/ch9/spf.html">SPF</a>. Things work, but I don&rsquo;t <em>really</em> know why.</p>

<p>I was shopping for a domain name the other day and while on the DNSimple website I was invited to receive a series of emails that offered to outline the DNS basics. I batted away my initial reluctance to sign myself up for spam, and I&rsquo;m glad I did &ndash; the lessons are nicely written, short and to the point, and thankfully aren&rsquo;t just an excercise in advertising for the registrar. I&rsquo;ve learned a couple things and reinforced my knowledge of others. I can&rsquo;t find a signup link now, but I do recommend them to anyone who wants to learn more about DNS.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Box UK Has an Engineering Blog]]></title>
    <link href="http://marvelley.com/blog/2014/02/04/box-uk-has-an-engineering-blog/"/>
    <updated>2014-02-04T07:53:34+00:00</updated>
    <id>http://marvelley.com/blog/2014/02/04/box-uk-has-an-engineering-blog</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve always enjoyed reading <a href="http://en.wikipedia.org/wiki/Microblogging">microblogs</a> like <a href="http://daringfireball.net/">Daring Fireball</a> which briefly editorialise links to content elsewhere on the web &ndash; it&rsquo;s like &ldquo;Here&rsquo;s something interesting, here&rsquo;s some perspective on it, now go read it.&rdquo;. While we&rsquo;ve had a blog on the Box UK website for some time, the format of it has been very much long-form. While that means we produce lots of in depth, informative content, the downside is because it can take a while to turn posts around the blog doesn&rsquo;t suit snappy, quick posts in the microblog style.</p>

<p>Internally, we&rsquo;re always sharing links to posts or videos in <a href="https://www.hipchat.com/">HipChat</a> &ndash; stuff that&rsquo;s relevant to our day-to-day work, stuff that could be useful to us in future, that sort of thing. For a while it&rsquo;s been on our roadmap to introduce a microblog on the <a href="http://www.boxuk.com/">Box UK website</a>, and now we have &ndash; last week we lauched the <a href="http://www.boxuk.com/developer-blog/">Box UK developer blog</a>. We&rsquo;ve already had posts on varied topics like SSH, Objective-C, Vim and Amazon S3. Keep an eye on it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Including Filtered Thumbnail Data With the WordPress JSON API Plugin]]></title>
    <link href="http://marvelley.com/2013/09/26/including-filtered-thumbnail-data-with-the-wordpress-json-api-plugin/"/>
    <updated>2013-09-26T00:00:00+00:00</updated>
    <id>http://marvelley.com/2013/09/26/including-filtered-thumbnail-data-with-the-wordpress-json-api-plugin</id>
    <content type="html"><![CDATA[<p>The <a href="http://wordpress.org/plugins/json-api/">JSON API</a> plugin is a great tool for exposing your WordPress data. I&#8217;ve used it to provide content to a few mobile applications; it&#8217;s well featured and most importantly, quite flexible. If your content providers are happiest using a CMS like WordPress, your project can benefit by allowing them to use the authoring tools they&#8217;re comfortable with while allowing you to easily access the content they&#8217;re creating, either to use directly within your application, or as I tend to do, by exporting the data into another application which then proxies the data to mobile applications. I find the latter approach gives you greater control over features like caching, while making it easier to relate the data to domain models that aren&#8217;t handled by WordPress.</p>

<p>But I digress! This post was conceived because when requesting all posts of a certain type through the plugin, response times were hideously slow. The request I was making looked like this:</p>

<p><a href="http://domain.com/?json=get_posts&amp;post_type=artist&amp;count=1000&amp;order=ASC">http://domain.com/?json=get_posts&amp;post_type=artist&amp;count=1000&amp;order=ASC</a></p>

<p>Reading the documentation for the plugin, I found that it was possible to filter the response to only contain properties that I wanted, which I figured should reduce the amount of work WordPress was having to do:</p>

<p><a href="http://domain.com/?json=get_posts&amp;post_type=artist&amp;count=2&amp;order=ASC&amp;include=id,title,content,custom_fields,thumbnail_images">http://domain.com/?json=get_posts&amp;post_type=artist&amp;count=2&amp;order=ASC&amp;include=id,title,content,custom_fields,thumbnail_images</a></p>

<p>This proved to be true, but I hit a snag when trying to include the thumbnail_images property &#8211; adding it to the CSV of whitelisted fields had no effect. Through trial and error it transpired that including the thumbnail field also has the effect of including the thumbnail, thumbnail_size, and thumbnail_images fields. The final URL ended up looking like this:</p>

<p><a href="http://domain.com/?json=get_posts&amp;post_type=artist&amp;count=2&amp;order=ASC&amp;include=id,title,content,custom_fields,thumbnail">http://domain.com/?json=get_posts&amp;post_type=artist&amp;count=2&amp;order=ASC&amp;include=id,title,content,custom_fields,thumbnail</a></p>

<p>Problem solved!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On Incremental Improvement]]></title>
    <link href="http://marvelley.com/2013/01/06/on-incremental-improvement/"/>
    <updated>2013-01-06T00:00:00+00:00</updated>
    <id>http://marvelley.com/2013/01/06/on-incremental-improvement</id>
    <content type="html"><![CDATA[<p>Twice today I&#8217;ve seen references to the benefits of iterative improvement, and I found that the topic resonated with me. At the moment I&#8217;m halfway though a pretty lengthy software project in which it&#8217;s sometimes hard to see the wood for the trees. The backlog is substantial, resulting in a hefty set of tasks for our team. In these situations, where the to-do list doesn&#8217;t seem to change day to day, it&#8217;s easy to feel crippled by inertia. However, these two references illustrate that we can succeed provided we ensure we&#8217;re making healthy, gradual progress.</p>

<p>One might expect that the references I&#8217;m alluding to originate from a tome of software development, like &#8220;<a href="http://pragprog.com/the-pragmatic-programmer">The Pragmatic Programmer</a>&#8220;, or from one of the many celebrated development gurus of Twitter, but in fact they are not directly concerned with software at all. The first comes from <a href="http://www.youtube.com/watch?v=7GHhmgZ0BwQ" title="The Undercover Economist Tim Harford: Full talk from Wired 2012">a talk discussing the pros and cons of iterative improvement</a> , linked to by my colleague (and all-round good chap) <a href="https://twitter.com/owenphelps" title="Owen Phelps' Twitter">Owen Phelps</a>, by Tim Harford at last year&#8217;s Wired UK conference:</p>

<blockquote><p>If you put together enough marginal improvements, in enough areas, you get something that&#8217;s truly outstanding.</p></blockquote>

<p>Give it a watch &#8211; it&#8217;s entertaining and informative.</p>

<p>The second reference came from an altogether different source &#8211; <a href="http://www.soundonsound.com/sos/jan13/articles/it-0113.htm" title="Alan Moulder: Sound on Sound January 2012">an interview with renowned mix engineer Alan Moulder</a> in this month&#8217;s issue of Sound on Sound magazine, in which he discusses his approach when applying VST plugins to his music projects:</p>

<blockquote><p>All the things I use do something to make the sound a tiny bit better, and if  you add everything together, the end result will be a lot better&#8230; It&#8217;s simple: better is better, whether it&#8217;s a tiny bit better or a lot better.</p></blockquote>

<p>Through never-ending sprints, features and tasks, iterative improvement is something all development teams should strive to achieve.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Symfony2: JSON Responses for XHR Errors and Authentication Failures]]></title>
    <link href="http://marvelley.com/2012/12/20/symfony2-json-responses-for-xhr-errors-and-authentication-failures/"/>
    <updated>2012-12-20T00:00:00+00:00</updated>
    <id>http://marvelley.com/2012/12/20/symfony2-json-responses-for-xhr-errors-and-authentication-failures</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been working on a Symfony2 application whose user interface is presented as a single page application that makes heavy use of JavaScript. The app sends <a href="http://en.wikipedia.org/wiki/XMLHttpRequest">XHR</a> requests to the Symfony2 backend API to retrieve and modify data, and it uses Symfony&#8217;s authorisation/authentication functionality to protect resources so they are only accessible to logged in users.</p>

<p>In an ideal world every request made by the application will succeed, but in reality things often go wrong; the user may have provided invalid data, their session may have expired meaning they are no longer logged in, or we may have a bug in our API code which causes a server error. With an out-of-the-box installation of Symfony2, each of these scenarios will result in the default error handler rendering a HTML page which isn&#8217;t much use to our client JavaScript application &#8211; instead we want the server to issue a JSON response to our AJAX request, complete with some contextual error details, with which we can give the user a meaningful error message.</p>

<p>I did a bit of Googling and came across a <a href="http://stackoverflow.com/questions/8607212/symfony2-ajax-login">few</a> <a href="https://groups.google.com/forum/?fromgroups=#!topic/symfony-devs/WvESDBprKrU">posts</a> <a href="http://stackoverflow.com/questions/12385923/handle-errors-in-ajax-within-symfony2-controller">which</a> dealt with some of these challenges, and by putting them all together I arrived at a solution which I&#8217;ll detail here in case it&#8217;s of use to anyone else.</p>

<p><a href="https://github.com/craigmarvelley/symfony2-xhr-error-handling">I&#8217;ve put together a demo app</a> which hopefully illustrates everything. Have a play with it (installation instructions are in the README), then read on <img src='http://marvelley.com/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p>

<p><a href="http://marvelley.com/images/posts/2012/12/Screen-Shot-2012-12-20-at-21.55.12-e1356040628744.png"><img class="aligncenter size-full wp-image-341" title="The demo application" src="http://marvelley.com/images/posts/2012/12/Screen-Shot-2012-12-20-at-21.55.12-e1356040628744.png" alt="" width="600" height="398" /></a></p>

<p>The app consists of a few components:</p>

<p>Client side:</p>

<ul>
<li>A jQuery global AJAX error handler</li>
<li>A login form &#8211; I have two, a Symfony2/Twig-based HTML login page which the user is redirected to if they try to access the app without a valid session, and a JavaScript login dialog which we will display if the server rejects an AJAX request due to authentication/authorisation failure, allowing the user to reauthenticate without leaving the app</li>
</ul>


<p>Server side:</p>

<ul>
<li>An authentication failure handler</li>
<li>An authentication success handler</li>
<li>A kernel exception listener</li>
</ul>


<p>As far as the rest of the app goes, I&#8217;m using the <a href="https://github.com/FriendsOfSymfony/FOSUserBundle/blob/master/Resources/doc/index.md">FOSUserBundle</a> with a standard configuration, which supplies the rest of the auth functionality, including the HTML login page.</p>

<p>Let&#8217;s start with the server components &#8211; three classes and a bit of config:</p>

<p><noscript>
  <p></p>

<pre><code>View the code on &lt;a href="https://gist.github.com/4340230"&gt;Gist&lt;/a&gt;.
</code></pre>

<p>  </p>
</noscript></p>

<p>The <code>XHRAuthenticationSuccessHandler</code> and <code>XHRAuthenticationFailureHandler</code> class&#8217; code is triggered when the user logs in, or fails to log in, respectively. We check to see if the original request was an AJAX (XHR) one, and if so we respond with JSON. If it&#8217;s a failure we&#8217;re dealing with, we also include the exception message to give the user some feedback &#8211; note that this is a quick solution; it might be prudent to vet the message, or to translate it. I&#8217;ve also included a &#8216;success&#8217; property which is a JavaScript convention that some frameworks (like <a href="http://www.sencha.com/products/extjs">ExtJS</a>) use to execute appropriate callbacks. Finally, we wire up these handlers with the security component in our application&#8217;s <a href="https://gist.github.com/4340230#file-security-yml">security configuration</a>.</p>

<p>The <code>XHRCoreExceptionListener</code> class code is triggered whenever a kernel exception occurs &#8211; check the <a href="https://gist.github.com/4340230#file-services-xml">service definition</a> for this listener, you&#8217;ll see we tell Symfony to call its <code>onCoreException</code> method whenever an exception event is fired. Again, we only want to act if the request that caused the exception was an AJAX one. Assuming it is, we try to work out the status code to return from the exception code &#8211; if it&#8217;s a valid HTTP code, we use that, otherwise we assume a server error (500). As before, we&#8217;re reusing the exception message to provide context &#8211; but in this case, where the exception could relate to anything in the system (like a database query) we&#8217;d really want to be cautious about exposing it to the user, so this code certainly isn&#8217;t suitable for a production environment.</p>

<p>That&#8217;s it for the server, now for the client. All the functionality is in <code>src/Acme/DemoBundle/Resources/views/Welcome/index.html.js</code>.</p>

<p>First we define a global error handler, which will be fired whenever an uncaught AJAX error occurs:</p>

<p><noscript>
  <p></p>

<pre><code>View the code on &lt;a href="https://gist.github.com/4348746"&gt;Gist&lt;/a&gt;.
</code></pre>

<p>  </p>
</noscript></p>

<p>If the problem is that the user does not have a valid authentication token, we invite them to log in.</p>

<p><noscript>
  <p></p>

<pre><code>View the code on &lt;a href="https://gist.github.com/4348760"&gt;Gist&lt;/a&gt;.
</code></pre>

<p>  </p>
</noscript></p>

<p>The login process is interesting &#8211; the modal login form is essentially a duplicate of the HTML one, but lacks the CSRF token which is automatically injected into the HTML form by Symfony. This helps prevent spoofing so I didn&#8217;t want to remove it, so the approach I took was to request the HTML login page, capture the value of the CSRF field in the response, then use that in a second request to actually authenticate the user. This meant I could reuse the same authentication code on the server.</p>

<p>The demo app also includes two other demonstrations &#8211; making a valid request (which will fail, and force a login, if the user does not have a valid session) and an invalid one (which displays the error message returned by the server). There&#8217;s not much to say about those, the code should be self explanatory.</p>

<p>That&#8217;s it really. The code is a little rough and ready, but hopefully it&#8217;ll give you enough to go on if you&#8217;re trying to do something similar!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Symfony2: Managing a User Entity Role With a Form Event Subscriber]]></title>
    <link href="http://marvelley.com/2012/11/10/symfony2-managing-a-user-entity-role-with-a-form-subscriber/"/>
    <updated>2012-11-10T00:00:00+00:00</updated>
    <id>http://marvelley.com/2012/11/10/symfony2-managing-a-user-entity-role-with-a-form-subscriber</id>
    <content type="html"><![CDATA[<p>I&#8217;m working on a Symfony2 application which makes use of roles to manage what Users of the system are able to do within the app. Symfony places no limit on the amount of roles the User can have, but in the context of my application, there are only two &#8211; a base user (ROLE_USER, in Symfony parlance), and an administrator (ROLE_ADMIN). As is Symfony custom, all users would possess the default role, but the administrator role would be granted on a per user basis. I&#8217;m using the FOSUserBundle and Doctrine, so a User&#8217;s roles are stored within an array on that User&#8217; Doctrine entity.</p>

<p>I began crafting a form (using the Symfony Form component) to manage user details. When creating forms that are bound to Doctrine I&#8217;ve generally found that I&#8217;ve needed to do little in the way of form customisation; the form component does a good job of figuring out which form fields to use based on the type of the variable it is given. So name, being a string, gets modelled as a textfield, while their registration date, being a DateTime object, causes a series of select boxes to be created which allow dates and times to be entered. So far so good.</p>

<p>But of course there has to be a reason for a blog post, and this is mine: I wanted a checkbox to toggle on/of the administrator role for each user. Since roles are stored in an array on the bound entity, the default is to render a collection of fields, which leads to an array of values being submitted by the form. Trying to modify the field definition to a &#8216;single&#8217; field, like a checkbox, led to an error as the Form component doesn&#8217;t know how to map an array to a single value. A multi-value field wasn&#8217;t an option as I didn&#8217;t want to expose the roles (which wouldn&#8217;t necessarily make sense to an end user), and I didn&#8217;t want to get into messing about with Twig templates if I could help it; a bit of Googling led me to <a href="http://symfony.com/doc/current/cookbook/form/dynamic_form_generation.html">this article</a> on the cookbook, which describes how to dynamically add elements to forms using a Form event subscriber; this turned out to be just what I needed.</p>

<p>Reading through the cookbook article, the following plan took shape: when the form is created, add a checkbox to the form which is ticked depending on whether the User object bound to the form has the administrator role. When the form is submitted, if the checkbox is ticked, grant the user that role. If it is not, remove the role from their array of granted roles.</p>

<p><a href="http://marvelley.com/images/posts/2012/11/Screen-Shot-2012-11-10-at-14.51.51.png"><img class="aligncenter size-full wp-image-311" title="The resulting form" src="http://marvelley.com/images/posts/2012/11/Screen-Shot-2012-11-10-at-14.51.51.png" alt="" width="793" height="491" /></a></p>

<p>To implement this, I needed two classes; a Form class, of course, and a new class that implements Symfony\Component\EventDispatcher\EventSubscriberInterface and subscribes to events on the form. As in the cookbook example, when the &#8216;preSetData&#8217; event fires I&#8217;d be adding a field to the form. In addition, when the &#8216;bind&#8217; event fires, I&#8217;d be using the value of the field to modify the bound object, in this case the User being managed. This is what I ended up with:</p>

<p><noscript>
  <p></p>

<pre><code>View the code on &lt;a href="https://gist.github.com/4051034"&gt;Gist&lt;/a&gt;.
</code></pre>

<p>  </p>
</noscript></p>

<p>I&#8217;m manually adding the subscriber to the form in UserType::buildForm(), which feels a bit weird when the usual approach would be to define a service and tag it appropriately. I&#8217;m not sure if that&#8217;s possible with Form subscribers, that&#8217;s just how the cookbook approach went. I&#8217;d imagine there are other ways I could have achieved the same result, but I like this approach because I don&#8217;t have to modify my User class at all, and I don&#8217;t have to delve into form field customisation.</p>

<p>The only downside I&#8217;ve found so far is that there doesn&#8217;t seem to be a way to order the fields that get added in the listener &#8211; they are always placed at the start of the collection, regardless of when the subscriber is attached to the form. This means that some template work is necessary to place the field as desired.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deactivating a Macports Install of XDebug in a LAMP Environment]]></title>
    <link href="http://marvelley.com/2012/09/20/deactivating-a-macports-install-of-xdebug-in-a-lamp-environment/"/>
    <updated>2012-09-20T00:00:00+00:00</updated>
    <id>http://marvelley.com/2012/09/20/deactivating-a-macports-install-of-xdebug-in-a-lamp-environment</id>
    <content type="html"><![CDATA[<p>A few times I&#8217;ve found myself cursing when trying to toggle <a href="http://xdebug.org/">XDebug</a> on and off via <a href="http://www.macports.org/">Macports</a>. Typically I&#8217;ll be debugging with it enabled, then disable it for development/testing to get the fastest experience possible (it tends to really impact performance on large codebases, such as a Symfony2 standard install), only to experience segfaults when I refresh the page I&#8217;m working on.</p>

<p>The solution I&#8217;ve found is when restarting Apache (which is necessary for the change to PHP&#8217;s installed modules takes effect), to use an explicit start/stop rather than a restart. <a href="http://httpd.apache.org/docs/2.2/stopping.html">According to the Apache docs</a> restarting only kills off children processes, so the parent remains running:</p>

<blockquote><p>Sending the <code>HUP</code> or <code>restart</code> signal to the parent causes it to kill off its children like in <code>TERM</code>, but the parent doesn&#8217;t exit. It re-reads its configuration files, and re-opens any log files. Then it spawns a new set of children and continues serving hits.</p></blockquote>

<p>I imagine this leading to a discrepancy in the loaded PHP modules, which causes the issue.</p>

<p>So when wanting to toggle XDebug, I use these commands:</p>

<pre>Install (first time only):
sudo port install php5-xdebug

Disable:
sudo port deactivate php5-xdebug
sudo apachectl stop
sudo apachectl start

Enable:
sudo port activate php5-xdebug
sudo apachectl stop
sudo apachectl start</pre>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jeff Atwood Is a Muppet.]]></title>
    <link href="http://marvelley.com/2012/06/30/jeff-atwood-is-a-muppet/"/>
    <updated>2012-06-30T00:00:00+00:00</updated>
    <id>http://marvelley.com/2012/06/30/jeff-atwood-is-a-muppet</id>
    <content type="html"><![CDATA[<p>I was having a nice, relaxing Saturday morning until I read through my Twitter timeline and was directed to Jeff Atwood&#8217;s latest post on Coding Horror, &#8220;<a href="http://www.codinghorror.com/blog/2012/06/the-php-singularity.html">The PHP Singularity</a>&#8220;. After reading through it, and the comments from other readers, I got annoyed. Really annoyed.</p>

<p>I won&#8217;t repeat the article, but the gist of it is:</p>

<ul>
<li>PHP is a horrible language</li>
<li>Something must be done</li>
<li>Jeff is the person to do it</li>
</ul>


<p>I quite enjoy blogging but I don&#8217;t do it very often. I try to make sure anything I talk about is well researched, because a baseless opinion is worthless, but I don&#8217;t have a lot of free time &#8211; so if I don&#8217;t have something I consider worth saying, I don&#8217;t say it.</p>

<p>Jeff doesn&#8217;t have the same concern. You may wonder why I read his blog, given that I clearly take exception to some of its content, but the funny thing is that when talking about things he is knowledgable of, he has some great advice.</p>

<p>Like when he talks about <a href="http://www.codinghorror.com/blog/2011/10/on-parenthood.html">his children</a>, because he obviously knows them, or <a href="http://www.codinghorror.com/blog/2012/06/because-everyone-still-needs-a-router.html">routers</a>, where he&#8217;s clearly done some investigation. Now, I&#8217;m about to become a father, so I really enjoyed the former post, and if I needed to buy a router, I&#8217;d probably just be lazy and pick one from the latter because he knows a lot more about them than I do.</p>

<p>But here&#8217;s the thing. Jeff doesn&#8217;t seem to know much about PHP. I&#8217;d guess he&#8217;s read some posts about it, seen a few Q&amp;As on Stack Overflow about it (a site he deserves massive kudos for), read through the PHP Manual, whatever &#8211; but he&#8217;s not a PHP developer. When he says PHP is &#8216;terrible&#8217; or &#8216;deeply flawed&#8217;, I wonder how he&#8217;s come to that conclusion? Has he ever developed anything substantial in PHP? What is he basing this opinion on? He&#8217;s played with his children, he&#8217;s bought and installed a router. But when it comes to PHP, is the extent of his knowledge that which he has gleaned from others? Because if that&#8217;s the case, he really should think twice about offering his opinion on it.</p>

<p>The most glaring statement in the entire article is this one:</p>

<blockquote><p>Therefore, I&#8217;d like to submit a humble suggestion to my fellow programmers. The next time you feel the urge to write Yet Another Epic Critique of PHP, consider that:</p>

<ol>
<li>We get it already. PHP is horrible, but it&#8217;s used everywhere. Guess what? It was just as horrible in 2008. And 2005. And 2002. There&#8217;s a pattern here, but it&#8217;s subtle. You have to look very closely to see it. On second thought, never mind. You&#8217;re probably not smart enough to figure it out.</li>
<li>The best way to combat something as pervasively and institutionally awful as PHP is not to point out all its (many, many, <em>many</em>) faults, but to <strong>build compelling alternatives</strong> and <strong>make sure these alternatives are equally pervasive, as easy to set up and use as possible</strong>.</li>
</ol>
</blockquote>

<p>How anyone can offer a &#8216;humble&#8217; suggestion and then go on to question the reader&#8217;s intelligence is besides the point (though it does nicely illustrate Jeff&#8217;s technique of drawing the reader in with deference only to hit them with a massive dose of self-righteousness) &#8211; but there&#8217;s two things I really take exception to here. Firstly, as <strong>anyone</strong> who has spent any real time with PHP knows, the language is far, far different now to what it was in 2002. For heaven&#8217;s sake, PHP5 (with a brand new object model that made proper OOP possible) didn&#8217;t make its debut &#8217;til 2004, and support for register_globals (one of the worst features of PHP, ever) was removed in the most recent version, 5.4. Those facts are available under <a href="http://en.wikipedia.org/wiki/PHP">PHP&#8217;s entry on Wikipedia</a>, but perhaps Jeff&#8217;s not smart enough to Google the history of PHP before commenting on it?</p>

<p>Secondly; assuming for a second that PHP is as horrible as he deems it to be &#8211; the best way to &#8216;combat&#8217; it isn&#8217;t to &#8216;build compelling alternatives&#8217; and &#8216;make sure these alternatives are equally pervasive, as easy to set up and use as possible&#8217; &#8211; no, the &#8216;best&#8217; thing to do (considering the amount of developers and sites worldwide who depend on the language and are getting things done with it every single day) is <strong>get involved</strong> with and <strong>actually understand</strong> PHP &#8211; read the <a href="http://news.php.net/php.internals">internals mailing list</a>, make <a href="https://wiki.php.net/rfc">requests for comments</a>, code contributions, etc. It&#8217;s a silly person who decides to try something new before attempting to fix what&#8217;s broken, when there is so much invested in it. Perhaps if Jeff wasn&#8217;t trying to drum up interest in this new project of his, he&#8217;d have been a little less inflammatory?</p>

<p>Look, as someone who has used PHP successfully for the last decade, obviously I&#8217;m going to disagree with Jeff&#8217;s opinion. But the language has not only helped me get a great job, a nice house, and will shortly be helping me pay for one of those baby things, it&#8217;s also made Facebook the biggest website in the world, and enabled Yahoo! to build (ok, and throw away, but it&#8217;s not PHP&#8217;s fault) an empire. When Jeff&#8217;s got off his soap box and tried to build something equally successful in PHP <strong>and failed</strong>, I&#8217;ll start taking his opinion seriously.</p>

<p>As I said, I don&#8217;t like making statements unless I&#8217;ve researched them fully. I&#8217;ve read Coding Horror for a long time, and I feel qualified to say that Jeff Atwood is a <a href="http://www.urbandictionary.com/define.php?term=muppet&amp;defid=778738">muppet</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resources for Learning Symfony2]]></title>
    <link href="http://marvelley.com/2012/05/27/resources-for-learning-symfony2/"/>
    <updated>2012-05-27T00:00:00+00:00</updated>
    <id>http://marvelley.com/2012/05/27/resources-for-learning-symfony2</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been asked a few times what the best resources are for learning Symfony2. With the project still relatively young there aren&#8217;t yet (to my knowledge, anyway!) any books (physical or otherwise) on Symfony2 available, but there is a good amount of information in the form of manuals and tutorials on the web to get on with.</p>

<p><a href="http://stackoverflow.com/questions/8623962/looking-for-symfony2-book">This question on Stack Overflow</a> lists most of them; specifically:</p>

<ul>
<li><a href="http://symfony.com/doc/current/book/index.html">The Book</a>: The official documentation, also available as a PDF download from the same location. The best place to start, and covers most of Symfony&#8217;s functionality, but doesn&#8217;t have many &#8216;real-world&#8217; examples, as opposed to&#8230;</li>
<li>&#8230; <a href="http://symfony.com/doc/current/cookbook/index.html">The Cookbook</a>: Complements The Book by providing some more complicated examples of how Symfony2 can be used &#8211; sometimes the example you&#8217;re desperately searching for doesn&#8217;t feature, but on the whole it&#8217;s necessary reading to understand what Symfony2&#8242;s capable of and the best ways to use it.</li>
<li>It&#8217;s not strictly a Symfony2 resource, but Fabien Potencier&#8217;s <a href="http://fabien.potencier.org/article/50/create-your-own-framework-on-top-of-the-symfony2-components-part-1">&#8216;Build your own framework&#8217;</a> series of articles use the same components that make up Symfony2 to construct a similar framework, and as such are a really good way to familiarise oneself with the building blocks often become invaluable when trying to accomplish anything complex with Symfony2.</li>
</ul>


<p>That&#8217;s it in terms of &#8216;official&#8217; resources. There are some really good community efforts too, including:</p>

<ul>
<li>A <a href="http://knpuniversity.com/">series of screencasts</a> at KnpUniversity which introduce the key features of Symfony2, from installation and configuration through to security, forms, and using Doctrine to work with data sources. These cost $$$, and I haven&#8217;t tried them myself, but KnpLabs have been very involved with the development of Symfony2 so they&#8217;re probably well worth a look.</li>
<li>The <a href="http://tutorial.symblog.co.uk/">Symblog</a> tutorial is an excellent step-by-step guide to building a blog in Symfony2, covering most of the essential topics, in the spirit of the Jobeet tutorial from the original Symfony framework. Each part of the tutorial points to related articles in the official documentation, so it&#8217;s a nice way to work through that while building something tangible.</li>
<li>Speaking of the Jobeet tutorial, there&#8217;s also <a href="http://www.ens.ro/2012/03/21/jobeet-tutorial-with-symfony2/">a companion tutorial</a> for Symfony2. Like the Symblog tutorial, this explains the MVC approach to development with Symfony2 and dips into functional/unit testing too.</li>
<li>I&#8217;ve found the <a href="http://php-and-symfony.matthiasnoback.nl/">PHP and Symfony</a> blog to be one of the best for learning about less common features of the framework, the sort of topics that are crucial when going beyond building the simple blog apps.</li>
<li><a href="http://richardmiller.co.uk/">Richard Miller</a>&#8216;s blog is also excellent for the same reason.</li>
</ul>


<p>Each of those resources will probably give anyone with decent PHP experience enough information to start building applications with the framework. Questions will inevitably arise, in which case go to the following places for help:</p>

<ul>
<li><a href="https://groups.google.com/forum/?fromgroups#!forum/symfony2">The Symfony2 Google Group</a> is handy because often the problem you have has been answered already, so it&#8217;s a good resource as well as somewhere to get help from others using the framework.</li>
<li><a href="http://symfony.com/irc">The Symfony2 IRC Channel</a> is good for real-time assistance, and is populated with both experts and newbies. Following the chat is a great way to pick up hints and tips for problems you have yet to encounter.</li>
</ul>


<p>If there are other good resources that I&#8217;ve missed, please let me know and I&#8217;ll add them. I&#8217;ll try to keep this article up to date in future as new resources emerge.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building Web Apps Like a (England) Boss.]]></title>
    <link href="http://marvelley.com/2012/05/16/building-web-apps-like-a-england-boss/"/>
    <updated>2012-05-16T00:00:00+00:00</updated>
    <id>http://marvelley.com/2012/05/16/building-web-apps-like-a-england-boss</id>
    <content type="html"><![CDATA[<p>If you think app development and football have nothing in common, read on.</p>

<p>There was a discussion on our IRC server at work this morning which centred on how to best mitigate the risk involved with using third party tools in web applications. Not just at the code level, as in a JavaScript library like <a href="http://jquery.com/">jQuery</a>, or a PHP framework like <a href="http://symfony.com/">Symfony2</a>, but right through the stack &#8211; from the OS, to the web server, to the app codebase and beyond.</p>

<p>Much of the discussion was along the lines of what you&#8217;d expect when devops (or sysadmins) and developers collide &#8211; those responsible for managing the stack want things that can be easily automated, are verifiable (ideally through something like checksums) and reliable (i.e. not placed directly on a production server from a Pentium 3 machine in some teenager&#8217;s bedroom half way round the world), while those responsible for writing the code want to be able to use the best tool for the job, whether it be a tried and trusted web server or the newest, shiniest Symfony2 bundle.</p>

<p>The general consensus was that both have equal importance. Personally, I think that depending on the nature of the app, it&#8217;s wise to proportion risk accordingly; an app with a USP centred around some novel, interactive UX may want to incorporate a new innovative JavaScript toolkit even if it&#8217;s yet to reach version 1.0, whereas an app with paramount speed and scalability requirements might want to try <a href="http://blog.digitalstruct.com/2010/07/12/getting-started-with-nginx-and-php-fpm/">PHP-FPM with nginx</a> in place of a more familiar solution like mod-php with Apache.</p>

<p>In isolation, either of these decisions probably wouldn&#8217;t pose a problem. Combining many such scenarios, though, may eventually load the project with enough risk as to eventually make it untenable. The holy grail is to arrive at a point where we have an app that delivers its required functionality while making use of as many trusted, reliable tools as possible, and can be managed in such a way as to make deployment and maintenance safe and simple.</p>

<p>Now, to the title of this post. While this discussion was raging in IRC, there was much furore over the <a href="http://www.guardian.co.uk/football/2012/may/16/euro-2012-england-squad-announcement-live">selection of the provisional England squad</a> for the Euro 2012 tournament. It occurred to me that the new England manager, Roy Hodgson, is facing many of the same challenges myself and my coworkers face when trying to decide on a strategy for selecting the players he thinks will combine to great effect in a few month&#8217;s time. He wants a team that blends reliable, experienced, mature players with younger, modern ones &#8211; with maybe a sprinkling of unpredictable, yet highly creative, firebrands that can make the difference between a good squad and a great one. This is essentially what I was trying to articulate in the conversation, but swapping players for libraries, or tools, written by myself, or by others.</p>

<p>So when I was scanning the list of players that are going to Poland and the Ukraine this summer, I couldn&#8217;t help but think of them in a technical fashion. For example:</p>

<ul>
<li>John Terry (Defender) &#8211; Very experienced, but can be unreliable and prone to catastrophic behaviour. (Windows OS &#8211; ever tried hosting a PHP app on Windows?).</li>
<li>Alex Oxlade-Chamberlain (Midfielder) &#8211; New kid on the block, has a speciality that offers a new dimension (see: nginx and content distribution networks)</li>
<li>Stuart Downing (Midfielder) &#8211; Does what he does and does it well enough, but isn&#8217;t going to make a massive difference overall. Comes with baggage and divides opinion. (CodeIgniter/CakePHP/any other technically limited PHP framework)</li>
<li>Wayne Rooney &#8211; Best of breed, unrivalled, links up with others very well, difficult to replicate or replace (jQuery)</li>
</ul>


<p>It&#8217;s a popular argument at the moment that more people should be aware of, and be able to, code. But perhaps we&#8217;re missing a trick &#8211; perhaps a few games of <a href="http://www.footballmanager.com/">Football Manager</a> is all it takes to be able to understand how to compose a fabulous web app these days.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows 7: Connecting to a Samsung Galaxy S2 Device With ADB]]></title>
    <link href="http://marvelley.com/2012/05/01/windows-7-connecting-to-a-samsung-galaxy-s2-device-with-adb/"/>
    <updated>2012-05-01T00:00:00+00:00</updated>
    <id>http://marvelley.com/2012/05/01/windows-7-connecting-to-a-samsung-galaxy-s2-device-with-adb</id>
    <content type="html"><![CDATA[<p>Step 1: Buy a Mac</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It&#8217;s a Kind of ImageMagick &#8211; Installing the PHP Extension for Windows 7.]]></title>
    <link href="http://marvelley.com/2012/02/15/installing-the-imagemagick-extension-for-windows-7n/"/>
    <updated>2012-02-15T00:00:00+00:00</updated>
    <id>http://marvelley.com/2012/02/15/installing-the-imagemagick-extension-for-windows-7n</id>
    <content type="html"><![CDATA[<p>I had a bit of a nightmare recently trying to get the ImageMagick PHP extension working on Windows. Builds of the extension as a DLL are <a href="http://valokuva.org/?page_id=50">provided by Mikko</a>, which is awesome, but I had some trouble getting it to work.</p>

<p>The workstation I was using was running 64-bit Windows 7N, and the issue I was seeing was that the extension was being registered (if I ran php -m from the command line it seemed to be loaded) but when inspecting phpinfo() output the module was conspicuous by its absence.</p>

<p>Windows 7N is an EU version of Windows that comes without the Media Player framework &#8211; presumably an anti-trust related provision. Upon inspecting the extension DLL with <a href="http://www.google.co.uk/url?sa=t&amp;rct=j&amp;q=dependency%20walker&amp;source=web&amp;cd=1&amp;ved=0CCAQFjAA&amp;url=http%3A%2F%2Fwww.dependencywalker.com%2F&amp;ei=gmw7T6H-DqqO0AWCsrRt&amp;usg=AFQjCNH2xHd_jlOFVUuUCGsxzdiAM2BlXg">Dependency Walker</a> I discovered that it was linked to several missing DLLs that are supplied by the Media Player framework, and an additional DLL, IEShims.dll, which is an Internet Explorer library.</p>

<p>I installed the <a href="http://www.microsoft.com/download/en/details.aspx?id=16546&amp;hash=7gyAvmSLCYr1yxwQ5Zti1LMYQjBvQzi8uADSX76Wzkj8h8n3XewG9LWsYhUlcMRMuXN1CUKhhqyeDDJZjZbygw%3d%3d">Media Feature Pack</a> which resolved the majority of the missing DLLs. I also copied IEShims.dll from Program Files\Internet Explorer to Windows\SystemWOW64 (this probably wasn&#8217;t a good idea as the architectures of the DLLs will be fundamentally different, SystemWOW64 expects 32-bit DLLs &#8211; but I haven&#8217;t encountered any adverse effects as yet). After doing this the extension began to work as expected, and was visible in phpinfo() output.</p>

<p>There was a crucial comment on Mikko&#8217;s blog that I&#8217;ll repeat here &#8211; if the workstation is running PHP under IIS/FastCGI, install version <strong>6.6.2-10 or earlier</strong> of ImageMagick (available from <a href="http://image_magick.veidrodis.com/image_magick/">http://image_magick.veidrodis.com/image_magick/</a>). Don&#8217;t install any versions later than that &#8211; they were built with VC10 and will not be compatible with the extension, which was built with VC9.</p>

<p>Finally, when I attempted to use the extension (I wanted to convert some images from SVG to PNG) I ran into errors because ImageMagick defaults to using the Windows temp directory as its conversion directory, and IUSR doesn&#8217;t have rights to write there. Rather than add it to the permitted users list (not a very secure approach) I set the IMAGICK_TMP environment system variable to a less prominent location; this required a restart to take effect.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[For the Social Good &#8211; Box UK Hackday #1 Recap]]></title>
    <link href="http://marvelley.com/2011/11/24/for-the-social-good-box-uk-hackday-1-recap/"/>
    <updated>2011-11-24T00:00:00+00:00</updated>
    <id>http://marvelley.com/2011/11/24/for-the-social-good-box-uk-hackday-1-recap</id>
    <content type="html"><![CDATA[<p>On the twentieth of November, 2011, the company for whom I work (<a href="http://boxuk.com">Box UK</a>) held a <a href="http://hackday.boxuk.com/">hackday</a> in Cardiff at the Student&#8217;s Union. It was the first time that we&#8217;d organised such an event, but it seemed to go really well &#8211; feedback from the participants was good, it was well attended, and personally I had a really good (if stressful!) time.</p>

<p>The theme of the hackday was &#8216;For the social good&#8217; &#8211; applications built during the day had to have some sort of social theme, ideally to improve the lives of the people that would use them. That&#8217;s quite a broad topic, and it resulted in an array of different apps &#8211; not just in the sense of intended purpose, but in style, and also in platform. While teams typically used scripting languages to build their apps within those used (PHP, JavaScript, Python) were a lot of varied frameworks (Symfony2, Lithium, Django, jQuery Mobile, Node.js, PhoneGap and more), as well as SQL and No-SQL solutions alike. I initially suggested creating an iOS app, until it was pointed out to me that the verbose nature of Cocoa meant we&#8217;d probably only get one class done in the 8.5 hours we had!</p>

<p>My team comprised of myself; Paul, a former colleague, and Tom, a 3rd Year student at Cardiff University. Paul and I had decided to try to create a mobile app that used geolocation to provide the user with trivia and quizzes for the places of interest around them; we were only going to concern ourselves with Cardiff, so it would be a tourist aid for the city, or perhaps a learning tool for schoolchildren. Tom then joined us, and had originally wanted to work on a Corkboard-style app &#8211; after a discussion we modified that into a Q&amp;A app which would be incorporated into our exploration tool idea, so the user could additionally ask questions and receive answers in realtime. That was the idea, anyway. We had 8.5 hours to implement it!</p>

<div id="attachment_218" class="wp-caption aligncenter" style="width: 310px">
  <a href="http://marvelley.com/images/posts/2011/11/hackday54.jpg"><img class="size-medium wp-image-218" title="Team Explore Cardiff" src="http://marvelley.com/images/posts/2011/11/hackday54-300x199.jpg" alt="" width="300" height="199" /></a><p class="wp-caption-text">
    Photo courtesy of dangreenphotography.com
  </p>
</div>


<p>We split our responsibilities up such that Paul would build the mobile app (he plumped for <a href="http://jquerymobile.com/">jQuery mobile</a>, version 1 of which having been released just days earlier), Tom would build an app to aggregate questions from users and allow a pool of authors to submit replies (he wanted to use <a href="http://cappuccino.org/">Cappuccino</a>), and I would build the webservice/content management system both apps would run on (I thought <a href="http://symfony.com/">Symfony2</a> would be a good framework). It sounded good in theory, but then it always does.</p>

<p>I&#8217;ve dabbled with Symfony2 since it was in beta so I knew <em>what</em> it could do, but not necessarily <em>how</em> to make it do it. So the first hour of the day was spent scanning the documentation and looking through the available &#8216;bundles&#8217; (Symfony nomenclature for packages of redistributable code) to see what community efforts I could re-use. I came across the <a href="http://sonata-project.org/bundles/admin/master">SonataAdminBundle</a> relatively quickly and it seemed a good fit &#8211; its purpose is to generate a <a href="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete">CRUD</a> interface for the models within the application&#8217;s domain. This would give me a quick way to add and manipulate the data in the app, so I plumped for it. I guess it&#8217;s a bit risky using an unknown in a hackday since if it turns out to be unsuitable, there&#8217;s not a lot of time to try something else &#8211; but I thankfully had no such problem here.</p>

<p>The SonataAdminBundle is impressive, in that with relatively little configuration and code I had a very functional app. The project documentation assumes a fair bit of Symfony2 knowledge from the developer, which isn&#8217;t ideal in a high pressure scenario where I didn&#8217;t really have time to read the source code, but I&#8217;d worked it out by lunchtime. I&#8217;d say within a couple of hours I had an app with which I could create models, specify forms which related to them, and manage data.</p>

<p>Most of the rest of my day was spent working with <a href="http://www.doctrine-project.org/projects/orm/2.0/docs/en">Doctrine2</a>, a PHP <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a> that is tightly integrated with Symfony2 and the SonataAdminBundle. Doctrine2 I found to be the perfect tool for a hackday &#8211; create a class, put some annotations on properties to define the type of the field, and any relationship to other classes, then run a command line script which generates all the accessor code, and even updates the database schema &#8211; saving a substantial bit of work. There were some hiccups along the way, but I did manage to get a webservice together which could supply Paul and Tom&#8217;s apps with data.</p>

<p>By this point we were running quite low on time (I think I spent too long chowing down on the copious amounts of free pizza!), and so rather guiltily I left the other members of the team with only an hour to integrate the webservice into their apps &#8211; both were true heroes though, quickly turning everything around so that we could demo something fully featured to the other teams.</p>

<p><a href="http://marvelley.com/images/posts/2011/11/Screen-Shot-2011-11-22-at-22.48.17.png"><img class="size-medium wp-image-216 aligncenter" title="The ExploreCardiff mobile app" src="http://marvelley.com/images/posts/2011/11/Screen-Shot-2011-11-22-at-22.48.17-221x300.png" alt="" width="221" height="300" /></a></p>

<p>Each of the other teams not only produced an app (I&#8217;ve been to hackdays where people don&#8217;t even get something together to demo, which is a little disappointing) but it was also gratifying to see that each app was functional, innovative and different. My personal favourite was Tomazs&#8217; mobile app for the Welsh Premier League (it doesn&#8217;t get enough love!), but the grit.ly team (who produced a mashup of several data sources to plot on a UK map areas at risk of accidents due to poor weather and lack of gritting), who won first prize, and a team of several 1st year Cardiff Uni students with another former colleague at Box UK, Warren Seymour, who took second with a cool Corkboard app for university students, thoroughly deserved their awards.</p>

<p>It was also great to see Tom take the best individual developer prize, as he demonstrated some serious coding chops despite having to wait until the very last for the data his app depended on. He also ran into some issues with Cappuccino during the day, and rather than abandon what he was doing, he just switched to <a href="http://www.prototypejs.org/">Prototype</a> and got on with it in a very pragmatic fashion.</p>

<p><a href="http://marvelley.com/images/posts/2011/11/IMG_1005.jpg"><img class="aligncenter size-medium wp-image-224" title="Ben and Kevin present their app" src="http://marvelley.com/images/posts/2011/11/IMG_1005-300x225.jpg" alt="" width="300" height="225" /></a></p>

<p>As a bonus, after the prizes were handed out we decamped for a drink in the Tafarn, something I haven&#8217;t done since leaving Cardiff University 10 years ago. It was almost worth attending the event solely for the excuse to walk down memory lane!</p>

<p>The code for the CMS app I built can be found on <a href="https://github.com/craigmarvelley/ExploreCardiffAdmin">my Github page</a>. Time permitting, I&#8217;d like to take the idea a bit further; though it&#8217;ll require a bit more planning than the 15 mins it got on Sunday to be a proper success!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Speaking at PHPSW: From PHP to Objective-C]]></title>
    <link href="http://marvelley.com/2011/11/08/speaking-at-phpsw-from-php-to-objective-c/"/>
    <updated>2011-11-08T00:00:00+00:00</updated>
    <id>http://marvelley.com/2011/11/08/speaking-at-phpsw-from-php-to-objective-c</id>
    <content type="html"><![CDATA[<p>Tomorrow night (09/11) I&#8217;m going to be giving a 20 minute talk on how I&#8217;ve found the transition from PHP to Objective-C, which I&#8217;ve been doing over the last year or so (transition is probably the wrong word, since I still regularly develop in PHP). The talk will be a slimmer version of the one I&#8217;ve submitted to a couple of conferences, but the proposal will still apply so I thought I&#8217;d post it here in case it encourages anyone to attend!</p>

<blockquote><p>Last year, after 8 years of developing almost exclusively in PHP, I decided to learn something new and begin developing for the iOS platform in Objective-C. I&#8217;d noticed that the typical modern PHP application, like an iOS application, is written using a framework and cutting-edge language features like closures and runtime dynamic binding, and thought that would serve to make the transfer easier. I also wanted to expand my skill set in an increasingly mobile, recession-hit world.</p>

<p>In this talk I will share my experiences of going from PHP to Objective-C and Cocoa; how I took the paradigms that I was accustomed to in PHP, like syntax, memory management, unit testing and design patterns, and mapped them to the iOS ecosystem. I&#8217;ll also describe some techniques used in Objective-C that can be applied in PHP to enhance our code. Finally, I&#8217;ll discuss what I consider to be the pros and cons of each platform, and how I believe each has its place in our future careers.</p></blockquote>

<p>PHPSW is a monthly PHP meetup held in Bristol, at the Golden Guinea, on the second Wednesday of every month. Everything kicks off at 7pm!</p>
]]></content>
  </entry>
  
</feed>
