<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Symfony2 | Craig Marvelley]]></title>
  <link href="http://marvelley.com/blog/categories/symfony2/atom.xml" rel="self"/>
  <link href="http://marvelley.com/"/>
  <updated>2014-10-17T09:25:28+00:00</updated>
  <id>http://marvelley.com/</id>
  <author>
    <name><![CDATA[Craig Marvelley]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Symfony2: JSON Responses for XHR Errors and Authentication Failures]]></title>
    <link href="http://marvelley.com/2012/12/20/symfony2-json-responses-for-xhr-errors-and-authentication-failures/"/>
    <updated>2012-12-20T00:00:00+00:00</updated>
    <id>http://marvelley.com/2012/12/20/symfony2-json-responses-for-xhr-errors-and-authentication-failures</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been working on a Symfony2 application whose user interface is presented as a single page application that makes heavy use of JavaScript. The app sends <a href="http://en.wikipedia.org/wiki/XMLHttpRequest">XHR</a> requests to the Symfony2 backend API to retrieve and modify data, and it uses Symfony&#8217;s authorisation/authentication functionality to protect resources so they are only accessible to logged in users.</p>

<p>In an ideal world every request made by the application will succeed, but in reality things often go wrong; the user may have provided invalid data, their session may have expired meaning they are no longer logged in, or we may have a bug in our API code which causes a server error. With an out-of-the-box installation of Symfony2, each of these scenarios will result in the default error handler rendering a HTML page which isn&#8217;t much use to our client JavaScript application &#8211; instead we want the server to issue a JSON response to our AJAX request, complete with some contextual error details, with which we can give the user a meaningful error message.</p>

<p>I did a bit of Googling and came across a <a href="http://stackoverflow.com/questions/8607212/symfony2-ajax-login">few</a> <a href="https://groups.google.com/forum/?fromgroups=#!topic/symfony-devs/WvESDBprKrU">posts</a> <a href="http://stackoverflow.com/questions/12385923/handle-errors-in-ajax-within-symfony2-controller">which</a> dealt with some of these challenges, and by putting them all together I arrived at a solution which I&#8217;ll detail here in case it&#8217;s of use to anyone else.</p>

<p><a href="https://github.com/craigmarvelley/symfony2-xhr-error-handling">I&#8217;ve put together a demo app</a> which hopefully illustrates everything. Have a play with it (installation instructions are in the README), then read on <img src='http://marvelley.com/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /></p>

<p><a href="/images/posts/2012/12/Screen-Shot-2012-12-20-at-21.55.12-e1356040628744.png"><img class="aligncenter size-full wp-image-341" title="The demo application" src="http://marvelley.com/images/posts/2012/12/Screen-Shot-2012-12-20-at-21.55.12-e1356040628744.png" alt="" width="600" height="398" /></a></p>

<p>The app consists of a few components:</p>

<p>Client side:</p>

<ul>
<li>A jQuery global AJAX error handler</li>
<li>A login form &#8211; I have two, a Symfony2/Twig-based HTML login page which the user is redirected to if they try to access the app without a valid session, and a JavaScript login dialog which we will display if the server rejects an AJAX request due to authentication/authorisation failure, allowing the user to reauthenticate without leaving the app</li>
</ul>


<p>Server side:</p>

<ul>
<li>An authentication failure handler</li>
<li>An authentication success handler</li>
<li>A kernel exception listener</li>
</ul>


<p>As far as the rest of the app goes, I&#8217;m using the <a href="https://github.com/FriendsOfSymfony/FOSUserBundle/blob/master/Resources/doc/index.md">FOSUserBundle</a> with a standard configuration, which supplies the rest of the auth functionality, including the HTML login page.</p>

<p>Let&#8217;s start with the server components &#8211; three classes and a bit of config:</p>

<p><noscript>
  <p>
    View the code on <a href="https://gist.github.com/4340230">Gist</a>.
  </p>
</noscript></p>

<p>The <code>XHRAuthenticationSuccessHandler</code> and <code>XHRAuthenticationFailureHandler</code> class&#8217; code is triggered when the user logs in, or fails to log in, respectively. We check to see if the original request was an AJAX (XHR) one, and if so we respond with JSON. If it&#8217;s a failure we&#8217;re dealing with, we also include the exception message to give the user some feedback &#8211; note that this is a quick solution; it might be prudent to vet the message, or to translate it. I&#8217;ve also included a &#8216;success&#8217; property which is a JavaScript convention that some frameworks (like <a href="http://www.sencha.com/products/extjs">ExtJS</a>) use to execute appropriate callbacks. Finally, we wire up these handlers with the security component in our application&#8217;s <a href="https://gist.github.com/4340230#file-security-yml">security configuration</a>.</p>

<p>The <code>XHRCoreExceptionListener</code> class code is triggered whenever a kernel exception occurs &#8211; check the <a href="https://gist.github.com/4340230#file-services-xml">service definition</a> for this listener, you&#8217;ll see we tell Symfony to call its <code>onCoreException</code> method whenever an exception event is fired. Again, we only want to act if the request that caused the exception was an AJAX one. Assuming it is, we try to work out the status code to return from the exception code &#8211; if it&#8217;s a valid HTTP code, we use that, otherwise we assume a server error (500). As before, we&#8217;re reusing the exception message to provide context &#8211; but in this case, where the exception could relate to anything in the system (like a database query) we&#8217;d really want to be cautious about exposing it to the user, so this code certainly isn&#8217;t suitable for a production environment.</p>

<p>That&#8217;s it for the server, now for the client. All the functionality is in <code>src/Acme/DemoBundle/Resources/views/Welcome/index.html.js</code>.</p>

<p>First we define a global error handler, which will be fired whenever an uncaught AJAX error occurs:</p>

<p><noscript>
  <p>
    View the code on <a href="https://gist.github.com/4348746">Gist</a>.
  </p>
</noscript></p>

<p>If the problem is that the user does not have a valid authentication token, we invite them to log in.</p>

<p><noscript>
  <p>
    View the code on <a href="https://gist.github.com/4348760">Gist</a>.
  </p>
</noscript></p>

<p>The login process is interesting &#8211; the modal login form is essentially a duplicate of the HTML one, but lacks the CSRF token which is automatically injected into the HTML form by Symfony. This helps prevent spoofing so I didn&#8217;t want to remove it, so the approach I took was to request the HTML login page, capture the value of the CSRF field in the response, then use that in a second request to actually authenticate the user. This meant I could reuse the same authentication code on the server.</p>

<p>The demo app also includes two other demonstrations &#8211; making a valid request (which will fail, and force a login, if the user does not have a valid session) and an invalid one (which displays the error message returned by the server). There&#8217;s not much to say about those, the code should be self explanatory.</p>

<p>That&#8217;s it really. The code is a little rough and ready, but hopefully it&#8217;ll give you enough to go on if you&#8217;re trying to do something similar!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Symfony2: Managing a User Entity Role With a Form Event Subscriber]]></title>
    <link href="http://marvelley.com/2012/11/10/symfony2-managing-a-user-entity-role-with-a-form-subscriber/"/>
    <updated>2012-11-10T00:00:00+00:00</updated>
    <id>http://marvelley.com/2012/11/10/symfony2-managing-a-user-entity-role-with-a-form-subscriber</id>
    <content type="html"><![CDATA[<p>I&#8217;m working on a Symfony2 application which makes use of roles to manage what Users of the system are able to do within the app. Symfony places no limit on the amount of roles the User can have, but in the context of my application, there are only two &#8211; a base user (ROLE_USER, in Symfony parlance), and an administrator (ROLE_ADMIN). As is Symfony custom, all users would possess the default role, but the administrator role would be granted on a per user basis. I&#8217;m using the FOSUserBundle and Doctrine, so a User&#8217;s roles are stored within an array on that User&#8217; Doctrine entity.</p>

<p>I began crafting a form (using the Symfony Form component) to manage user details. When creating forms that are bound to Doctrine I&#8217;ve generally found that I&#8217;ve needed to do little in the way of form customisation; the form component does a good job of figuring out which form fields to use based on the type of the variable it is given. So name, being a string, gets modelled as a textfield, while their registration date, being a DateTime object, causes a series of select boxes to be created which allow dates and times to be entered. So far so good.</p>

<p>But of course there has to be a reason for a blog post, and this is mine: I wanted a checkbox to toggle on/of the administrator role for each user. Since roles are stored in an array on the bound entity, the default is to render a collection of fields, which leads to an array of values being submitted by the form. Trying to modify the field definition to a &#8216;single&#8217; field, like a checkbox, led to an error as the Form component doesn&#8217;t know how to map an array to a single value. A multi-value field wasn&#8217;t an option as I didn&#8217;t want to expose the roles (which wouldn&#8217;t necessarily make sense to an end user), and I didn&#8217;t want to get into messing about with Twig templates if I could help it; a bit of Googling led me to <a href="http://symfony.com/doc/current/cookbook/form/dynamic_form_generation.html">this article</a> on the cookbook, which describes how to dynamically add elements to forms using a Form event subscriber; this turned out to be just what I needed.</p>

<p>Reading through the cookbook article, the following plan took shape: when the form is created, add a checkbox to the form which is ticked depending on whether the User object bound to the form has the administrator role. When the form is submitted, if the checkbox is ticked, grant the user that role. If it is not, remove the role from their array of granted roles.</p>

<p><a href="/images/posts/2012/11/Screen-Shot-2012-11-10-at-14.51.51.png"><img class="aligncenter size-full wp-image-311" title="The resulting form" src="http://marvelley.com/images/posts/2012/11/Screen-Shot-2012-11-10-at-14.51.51.png" alt="" width="793" height="491" /></a></p>

<p>To implement this, I needed two classes; a Form class, of course, and a new class that implements Symfony\Component\EventDispatcher\EventSubscriberInterface and subscribes to events on the form. As in the cookbook example, when the &#8216;preSetData&#8217; event fires I&#8217;d be adding a field to the form. In addition, when the &#8216;bind&#8217; event fires, I&#8217;d be using the value of the field to modify the bound object, in this case the User being managed. This is what I ended up with:</p>

<p><noscript>
  <p>
    View the code on <a href="https://gist.github.com/4051034">Gist</a>.
  </p>
</noscript></p>

<p>I&#8217;m manually adding the subscriber to the form in UserType::buildForm(), which feels a bit weird when the usual approach would be to define a service and tag it appropriately. I&#8217;m not sure if that&#8217;s possible with Form subscribers, that&#8217;s just how the cookbook approach went. I&#8217;d imagine there are other ways I could have achieved the same result, but I like this approach because I don&#8217;t have to modify my User class at all, and I don&#8217;t have to delve into form field customisation.</p>

<p>The only downside I&#8217;ve found so far is that there doesn&#8217;t seem to be a way to order the fields that get added in the listener &#8211; they are always placed at the start of the collection, regardless of when the subscriber is attached to the form. This means that some template work is necessary to place the field as desired.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resources for Learning Symfony2]]></title>
    <link href="http://marvelley.com/2012/05/27/resources-for-learning-symfony2/"/>
    <updated>2012-05-27T00:00:00+00:00</updated>
    <id>http://marvelley.com/2012/05/27/resources-for-learning-symfony2</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been asked a few times what the best resources are for learning Symfony2. With the project still relatively young there aren&#8217;t yet (to my knowledge, anyway!) any books (physical or otherwise) on Symfony2 available, but there is a good amount of information in the form of manuals and tutorials on the web to get on with.</p>

<p><a href="http://stackoverflow.com/questions/8623962/looking-for-symfony2-book">This question on Stack Overflow</a> lists most of them; specifically:</p>

<ul>
<li><a href="http://symfony.com/doc/current/book/index.html">The Book</a>: The official documentation, also available as a PDF download from the same location. The best place to start, and covers most of Symfony&#8217;s functionality, but doesn&#8217;t have many &#8216;real-world&#8217; examples, as opposed to&#8230;</li>
<li>&#8230; <a href="http://symfony.com/doc/current/cookbook/index.html">The Cookbook</a>: Complements The Book by providing some more complicated examples of how Symfony2 can be used &#8211; sometimes the example you&#8217;re desperately searching for doesn&#8217;t feature, but on the whole it&#8217;s necessary reading to understand what Symfony2&#8242;s capable of and the best ways to use it.</li>
<li>It&#8217;s not strictly a Symfony2 resource, but Fabien Potencier&#8217;s <a href="http://fabien.potencier.org/article/50/create-your-own-framework-on-top-of-the-symfony2-components-part-1">&#8216;Build your own framework&#8217;</a> series of articles use the same components that make up Symfony2 to construct a similar framework, and as such are a really good way to familiarise oneself with the building blocks often become invaluable when trying to accomplish anything complex with Symfony2.</li>
</ul>


<p>That&#8217;s it in terms of &#8216;official&#8217; resources. There are some really good community efforts too, including:</p>

<ul>
<li>A <a href="http://knpuniversity.com/">series of screencasts</a> at KnpUniversity which introduce the key features of Symfony2, from installation and configuration through to security, forms, and using Doctrine to work with data sources. These cost $$$, and I haven&#8217;t tried them myself, but KnpLabs have been very involved with the development of Symfony2 so they&#8217;re probably well worth a look.</li>
<li>The <a href="http://tutorial.symblog.co.uk/">Symblog</a> tutorial is an excellent step-by-step guide to building a blog in Symfony2, covering most of the essential topics, in the spirit of the Jobeet tutorial from the original Symfony framework. Each part of the tutorial points to related articles in the official documentation, so it&#8217;s a nice way to work through that while building something tangible.</li>
<li>Speaking of the Jobeet tutorial, there&#8217;s also <a href="http://www.ens.ro/2012/03/21/jobeet-tutorial-with-symfony2/">a companion tutorial</a> for Symfony2. Like the Symblog tutorial, this explains the MVC approach to development with Symfony2 and dips into functional/unit testing too.</li>
<li>I&#8217;ve found the <a href="http://php-and-symfony.matthiasnoback.nl/">PHP and Symfony</a> blog to be one of the best for learning about less common features of the framework, the sort of topics that are crucial when going beyond building the simple blog apps.</li>
<li><a href="http://richardmiller.co.uk/">Richard Miller</a>&#8216;s blog is also excellent for the same reason.</li>
</ul>


<p>Each of those resources will probably give anyone with decent PHP experience enough information to start building applications with the framework. Questions will inevitably arise, in which case go to the following places for help:</p>

<ul>
<li><a href="https://groups.google.com/forum/?fromgroups#!forum/symfony2">The Symfony2 Google Group</a> is handy because often the problem you have has been answered already, so it&#8217;s a good resource as well as somewhere to get help from others using the framework.</li>
<li><a href="http://symfony.com/irc">The Symfony2 IRC Channel</a> is good for real-time assistance, and is populated with both experts and newbies. Following the chat is a great way to pick up hints and tips for problems you have yet to encounter.</li>
</ul>


<p>If there are other good resources that I&#8217;ve missed, please let me know and I&#8217;ll add them. I&#8217;ll try to keep this article up to date in future as new resources emerge.</p>
]]></content>
  </entry>
  
</feed>
